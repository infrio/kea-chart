apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Release.Namespace }}
  name: "{{ .Release.Name }}-init"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: config-databases
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command: ["/bin/bash", "-c", "/usr/local/bin/setup-kea-dbs.sh"]
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-db-init
        volumeMounts:
        - name: db-config
          mountPath: /etc/kea-db-config
        - name: stork-certs
          mountPath: /etc/stork/certs
      volumes:
      - name: db-config
        secret:
          secretName: {{ include "postgresql-ha.postgresql" (index .Subcharts "postgresql-ha") }}
          optional: false
      - name: stork-certs
        secret:
          secretName: stork-certs
          optional: false
