apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: stork
  labels:
    {{- include "kea4.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "stork.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "stork.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kea4.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: stork-server
          command:
          - bash
          - "-c"
          - /usr/local/bin/start-stork-server.sh
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: stork-server
              containerPort: {{ .Values.service.storkServerPort }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.storkServerPort }}
            initialDelaySeconds: 15
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.storkServerPort }}
            initialDelaySeconds: 15
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: stork-config
            mountPath: /etc/stork
      volumes:
      - name: stork-config
        secret:
          secretName: stork-config
          optional: false
          items:
          - key: server.env
            path: server.env
